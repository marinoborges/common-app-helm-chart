apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common-app.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "common-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "common-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "common-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ .Values.app.portname }}
              containerPort: {{ .Values.app.port }}
              protocol: {{ .Values.app.protocol }}
{{- range $index, $port := .Values.app.extraPorts }}
            - containerPort: {{ $port.port }}
              name: {{ $port.name }}
{{- end }}
          livenessProbe:
  {{- if eq .Values.livenessProbe.probeType "httpGet" }}
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              scheme: {{ .Values.livenessProbe.scheme }}
              port: {{ .Values.livenessProbe.port | default .Values.app.port }}
  {{- else if eq .Values.livenessProbe.probeType "tcpSocket" }}
            tcpSocket:
              port: {{ .Values.livenessProbe.port | default .Values.app.port }}
  {{- else if eq .Values.livenessProbe.probeType "exec" }}
            exec:
              command:
  {{ toYaml .Values.livenessProbe.command | indent 14 }}
  {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
  {{- if eq .Values.readinessProbe.probeType "httpGet" }}
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              scheme: {{ .Values.readinessProbe.scheme }}
              port: {{ .Values.readinessProbe.port | default .Values.app.port }}
  {{- else if eq .Values.readinessProbe.probeType "tcpSocket" }}
            tcpSocket:
              port: {{ .Values.readinessProbe.port | default .Values.app.port }}
  {{- else if eq .Values.readinessProbe.probeType "exec" }}
            exec:
              command:
  {{ toYaml .Values.readinessProbe.command | indent 14 }}
  {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.app.envVarsCM .Values.app.envVarsSecret }}
          envFrom:
            {{- if .Values.app.envVarsCM }}
            - configMapRef:
                name: {{ include "common-app.fullname" . }}
            {{- end }}
            {{- if .Values.app.envVarsSecret }}
            - secretRef:
                name: {{ include "common-app.fullname" . }}
            {{- end }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
